@page "/countries/edit/{Id:int}"


@inject NavigationManager navigationManager
@inject IRepository repository
@inject SweetAlertService sweetAlertService


<h3>Editar Pais</h3>


@if(country == null)
{
    <p>Cargando...</p>
}
else
{
    <CountryForm @ref="countryForm" Country="country" OnValidSubmit="EditAsync" ReturnAction="Return" />
}

@code {

    private Country? country;

    public CountryForm? countryForm;

    [Parameter]
    public int Id { get; set; } 




    override protected async Task OnInitializedAsync()
    {
        var responseHttp = await repository.Get<Country>($"/api/countries/{Id}");
        if(responseHttp.Error)
        {
            if(responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/countries");
                return;
            }
            var menssageError = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", menssageError, SweetAlertIcon.Error);
            return;

        }
        country = responseHttp.Response;
    }


    private async Task EditAsync()
    {
        var responseHttp = await repository.Put("api/countries", country);

        if (responseHttp.Error)
        {
            var messageError = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", messageError, SweetAlertIcon.Error);
            return;
        }
       
        Return();
        

    }


    private void Return()
    {
        countryForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo("/countries");
    }

}
